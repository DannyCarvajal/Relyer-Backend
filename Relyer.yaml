swagger: "2.0"
info:
  description: "Documentacion API Relyer."
  version: "1.0.0"
  title: "Relyer"
tags:
- name: "user"
  description: "Operaciones acerca de usuarios"
- name: "questions"
  description: "Preguntas del test"
- name: "results"
  description: "Resultados del test"
schemes:
- "https"
- "http"
paths:
  /user:
    post:
      tags:
      - "user"
      summary: "Creacion de usuario"
      description: "Se crea un nuevo usuario mediante el formulario de registro que se implementara en la web"
      operationId: "createUser"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Se necesita objeto para enviar datos"
        required: true
        schema:
          $ref: "#/definitions/User"
      responses:
        "200":
          description: "Usuario creado"
        "400":
          description: "Datos invalidos"
  /user/login:
    post:
      tags:
      - "user"
      summary: "Inicio de sesion usuario"
      description: "Inicio de sesion de usuario mediante el formulario de log in que se implementara en la web"
      operationId: "loginUser"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Objeto UserLogin es necesario para ingresar"
        required: true
        schema:
          $ref: "#/definitions/UserLogin"
      responses:
        "200":
          description: "Log in correcto"
        "400":
          description: "Datos invalidos"
  /user/id/:
    get:
      tags:
      - "user"
      summary: "Conseguir usuario por id"
      description: "Conseguir un usuario del cual se conozca su id"
      operationId: "listUserById"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "userId"
        in: "query"
        description: "Id del usuario que se buscara"
        required: true
        type: "integer"
      responses:
        "200":
          description: "Listado correcto"
        "400":
          description: "Error al listar"
      
    put:
      tags:
      - "user"
      summary: "Actualizacion de usuario"
      description: "Se actualiza un usuario"
      operationId: "updateUserById"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "userId"
        in: "query"
        description: "Id del usuario que se actualizara"
        required: true
        type: "integer"
      - in: "body"
        name: "body"
        description: "Se necesita objeto para enviar datos"
        required: true
        schema:
          $ref: "#/definitions/User"
      responses:
        "200":
          description: "Usuario actualizado"
        "400":
          description: "Datos invalidos"
          
    delete:
      tags:
      - "user"
      summary: "Eliminacion de usuario"
      description: "Se elimina un usuario por id"
      operationId: "deleteUser"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "userId"
        in: "query"
        description: "Id del usuario que se eliminara"
        required: true
        type: "integer"
      responses:
        "200":
          description: "Usuario eliminado"
        "400":
          description: "Error al eliminar"
          
  /user/name/:
    get:
      tags:
      - "user"
      summary: "Listar usuarios por nombres"
      description: "Listar todos los usuarios de la base de datos segun nombre"
      operationId: "listUserByName"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "userName"
        in: "query"
        description: "Nombre que se buscara"
        required: true
        type: "integer"
      responses:
        "200":
          description: "Listado correcto"
        "400":
          description: "Error al listar"
  /questions/:
    get:
      tags:
      - "questions"
      summary: "Listar preguntas"
      description: "Listar las preguntas que se requeriran para el test"
      operationId: "listQuestions"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "cantidad"
        in: "query"
        description: "Cantidad de preguntas que se traeran, si no se define traeran un valor por defecto"
        required: false
        type: "integer"
      responses:
        "200":
          description: "Listado correcto"
        "400":
          description: "Error al listar"
          
    post:
      tags:
      - "questions"
      summary: "Añadir nueva pregunta"
      description: "Se añade una pregunta nueva al banco de preguntas"
      operationId: "addQuestions"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Objeto que contenga la pregunta y posibles respuestas"
        required: true
        schema:
          $ref: "#/definitions/Questions"
      responses:
        "200":
          description: "Pregunta añadida correctamente"
        "400":
          description: "Error al añadir"
    
    delete:
      tags:
      - "questions"
      summary: "Eliminar pregunta"
      description: "Se elimina una pregunta mediante su id"
      operationId: "deleteQuestion"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "questionId"
        in: "query"
        description: "Id de la pregunta que se eliminara"
        required: false
        type: "integer"
      responses:
        "200":
          description: "Eliminado correctamente"
        "400":
          description: "Error al eliminar"
    
    put:
      tags:
      - "questions"
      summary: "Actualizar pregunta"
      description: "Se actualiza una pregunta mediante su id"
      operationId: "updateQuestion"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "questionId"
        in: "query"
        description: "Id de la pregunta que se eliminara"
        required: false
        type: "integer"
      - in: "body"
        name: "body"
        description: "Objeto que contenga la pregunta y posibles respuestas para reemplazar"
        required: true
        schema:
          $ref: "#/definitions/Questions"
      responses:
        "200":
          description: "Actualizado correctamente"
        "400":
          description: "Error al actualizar"

  /results/:
    get:
      tags:
      - "results"
      summary: "Listar o traer resultados"
      description: "Listar o traer los resultados del test"
      operationId: "listResults"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        "200":
          description: "Listado correcto"
        "400":
          description: "Error al listar"
    post:
      tags:
      - "results"
      summary: "Añadir resultado del test"
      description: "Se añade un resultado del test"
      operationId: "addResults"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Objeto que contenga las preguntas con respuestas"
        required: true
        schema:
          $ref: "#/definitions/Results"
      responses:
        "200":
          description: "Resultado añadido correctamente"
        "400":
          description: "Error al añadir"
          
          
definitions:
  User:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        name:
          type: "string"
        lastName:
          type: "string"
        email:
          type: "string"
        password:
          type: "string"
        phone:
          type: "string"
        location:
          type: "string"
        enterpriseStatus:
          type: "string"
  UserLogin:
    type: "object"
    properties:
      email:
        type: "string"
      password:
        type: "string"
        
  Questions:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      pregunta:
        type: "string"
      respuesta1:
        type: "string"
      respuesta2:
        type: "string"
      respuesta3:
        type: "string"
      respuesta4:
        type: "string"
        
  Results:
    type: "object"
    properties:
      id:
        type: "integer"
      preguntas:
        type: "object"
      respuestas: 
        type: "object"
      

